user  nginx;
worker_processes auto;

events {
    worker_connections  1024;
}
## virtual host
http {
  include /etc/nginx/mime.types;
  default_type application/json;
  upstream chatbot {
    server 10.100.20.65:11000;
  }
  upstream singulariti-website {
    server 10.100.10.80:4000;
  }
  upstream singulariti-blog{
    server 10.100.30.80:4000;
  }
  upstream singulariti-website-staging {
    server 10.100.20.80:4000;
  }
  upstream singulariti-blog-staging {
    server 10.100.40.80:4000;
  }
  upstream mattermost{
    server 10.100.0.65:80;
  }
  upstream ni-elasticsearch{
    server elasticsearch.ni-production:9200;
  }

  upstream ni-elasticsearch-testing{
    server elasticsearch.ni-testing:9200;
  }

  server {
    listen 80;
    server_name singulariti.io www.singulariti.io;
    # your configuration here
    location / {
      expires off;
      proxy_set_header        Accept-Encoding   "";
      proxy_set_header        Host              $http_host;
      proxy_set_header        X-Forwarded-By    $server_addr:$server_port;
      proxy_set_header        X-Forwarded-For   $remote_addr;
      proxy_set_header        X-Forwarded-Proto $scheme;
      proxy_set_header        X-Real-IP         $remote_addr;
      proxy_pass  http://singulariti-website;
      if ( $proxy_add_x_forwarded_for ~* (36.110.26.34|42.159.243.153) ) {
        proxy_pass http://singulariti-website-staging;
      }
      proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
    }
    }
  server {
    listen 80;
    server_name mm.singulariti.io;
    # your configuration here
    location / {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_redirect off;
      proxy_pass http://mattermost;
      proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
    }
    location /api/v1/websocket {
      proxy_http_version 1.1;
      proxy_set_header Upgrade $http_upgrade;
      proxy_set_header Connection "upgrade";
      proxy_pass  http://mattermost;
    }
  }
  server {
    listen 80;
    server_name blog.singulariti.io;
    # your configuration here
    location / {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_redirect off;
      proxy_pass http://singulariti-blog;
      proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
      if ( $proxy_add_x_forwarded_for ~* (36.110.26.34|42.159.243.153) ) {
        proxy_pass http://singulariti-blog-staging;
      }
    }
  }
  server {
    listen 80;
    server_name chatbot.singulariti.io;
    # your configuration here
    location / {
      proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
      proxy_set_header Host $http_host;
      proxy_redirect off;
      proxy_pass http://chatbot;
      proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
    }
  }
  server {
    listen 9200 ssl;
    server_name singulariti.io;

    # SSL
    ssl_certificate     /nginx-cert/singulariti.io.crt;
    ssl_certificate_key /nginx-cert/singulariti.io.key;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    location / {
      # To add basic authentication to v2 use auth_basic setting plus add_header
      auth_basic "Registry realm";
      auth_basic_user_file /nginx-cert/htpasswd;

      proxy_pass                          http://ni-elasticsearch;
      proxy_set_header  Host              $http_host;   # required for docker client's sake
      proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
      proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header  X-Forwarded-Proto $scheme;
      proxy_read_timeout                  900;
    }
  }
  server {
    listen 9201 ssl;
    server_name singulariti.io;

    # SSL
    ssl_certificate     /nginx-cert/singulariti.io.crt;
    ssl_certificate_key /nginx-cert/singulariti.io.key;
    ssl_protocols       TLSv1 TLSv1.1 TLSv1.2;
    ssl_ciphers         HIGH:!aNULL:!MD5;

    location / {
      # To add basic authentication to v2 use auth_basic setting plus add_header
      auth_basic "Registry realm";
      auth_basic_user_file /nginx-cert/htpasswd;

      proxy_pass                          http://ni-elasticsearch-testing;
      proxy_set_header  Host              $http_host;   # required for docker client's sake
      proxy_set_header  X-Real-IP         $remote_addr; # pass on real client's IP
      proxy_set_header  X-Forwarded-For   $proxy_add_x_forwarded_for;
      proxy_set_header  X-Forwarded-Proto $scheme;
      proxy_read_timeout                  900;
    }
  }
}
