#cloud-config
runcmd:
  - sysctl vm.overcommit_memory=1
  - ulimit -n 4096
write-files:
  - path: /etc/.noupdate
    permissions: '0644'
    content: |
      # do not update OS if this file exist
  - path: /opt/bin/wupiao
    permissions: '0755'
    content: "#!/bin/bash\n# [w]ait [u]ntil [p]ort [i]s [a]ctually [o]pen\n[ -n \"$1\" ] && [ -n \"$2\" ] && while ! curl --output /dev/null \\\n  --silent --head --fail --cacert /opt/bin/ca.pem --cert /opt/bin/worker.pem --key /opt/bin/worker-key.pem \\\n  https://${1}:${2}; do sleep 1 && echo -n .; done;\nexit $?\n"
coreos:
  fleet:
    metadata: role=node
  units:
    - name: update-engine.service
      command: start
      content: |
        [Unit]
        Description=Update Engine
        ConditionVirtualization=!container
        ConditionPathExists=!/etc/.noupdate

        [Service]
        Type=dbus
        BusName=com.coreos.update1
        ExecStart=/usr/sbin/update_engine -foreground -logtostderr
        BlockIOWeight=100
        Restart=always
        RestartSec=30

        [Install]
        WantedBy=default.target
    - name: etcd2.service
      command: start
      drop-ins:
        - name: 50-cluster-setting.conf
          content: |
            [Service]
            Environment=ETCD_DISCOVERY_SRV=fds.so
            Environment=ETCD_PROXY=on
    - name: early-docker.service
      command: start
      content: >
        [Unit]

        Description=Early Docker Application Container Engine

        Documentation=http://docs.docker.com

        After=early-docker.socket

        Requires=early-docker.socket



        [Service]

        Environment=TMPDIR=/var/tmp

        MountFlags=slave

        LimitNOFILE=1048576

        LimitNPROC=1048576

        ExecStart=/usr/lib/coreos/dockerd --daemon --host=fd://
        --insecure-registry=r.fds.so:5000 --bridge=none --iptables=false
        --ip-masq=false --graph=/var/lib/early-docker
        --pidfile=/var/run/early-docker.pid



        [Install]

        WantedBy=early-docker.target
    - name: fleet.service
      command: start
    - name: flanneld.service
      command: start
      content: "[Unit]\nDescription=Network fabric for containers\nDocumentation=https://github.com/coreos/flannel\nRequires=early-docker.service\nAfter=etcd.service etcd2.service early-docker.service\nBefore=early-docker.target\n\n[Service]\nType=notify\nRestart=always\nRestartSec=5\nEnvironment=\"TMPDIR=/var/tmp/\"\nEnvironment=\"DOCKER_HOST=unix:///var/run/early-docker.sock\"\nEnvironment=\"FLANNEL_VER=0.5.2\"\nEnvironment=\"ETCD_SSL_DIR=/etc/ssl/etcd\"\nLimitNOFILE=1048576\nLimitNPROC=1048576\nExecStartPre=/sbin/modprobe ip_tables\nExecStartPre=/usr/bin/mkdir -p /run/flannel\nExecStartPre=/usr/bin/mkdir -p ${ETCD_SSL_DIR}\nExecStartPre=/usr/bin/touch /run/flannel/options.env\nExecStartPre=/usr/bin/etcdctl set /coreos.com/network/config '{\"Network\":\"10.244.0.0/16\", \"Backend\": {\"Type\": \"vxlan\"}}'\n\nExecStart=/usr/libexec/sdnotify-proxy /run/flannel/sd.sock \\\n  /usr/bin/docker run --net=host --privileged=true --rm \\\n  --volume=/run/flannel:/run/flannel \\\n  --env=NOTIFY_SOCKET=/run/flannel/sd.sock \\\n  --env-file=/run/flannel/options.env \\\n  --volume=/usr/share/ca-certificates:/etc/ssl/certs:ro \\\n  --volume=${ETCD_SSL_DIR}:/etc/ssl/etcd:ro \\\n  r.fds.so:5000/flannel:${FLANNEL_VER} /opt/bin/flanneld --ip-masq=true\n\nExecStartPost=/usr/bin/docker run --net=host --rm -v /run:/run \\\n  r.fds.so:5000/flannel:${FLANNEL_VER} \\\n  /opt/bin/mk-docker-opts.sh -d /run/flannel_docker_opts.env -i\n"
    - name: docker.service
      command: start
      content: >
        [Unit]

        Description=Docker Application Container Engine

        Documentation=http://docs.docker.com

        After=docker.socket early-docker.target network.target flanneld.service

        Requires=docker.socket early-docker.target flanneld.service



        [Service]

        EnvironmentFile=-/run/flannel_docker_opts.env

        Environment='DOCKER_OPTS=--insecure-registry node-00:30500
        --insecure-registry node-01:30500 --insecure-registry r.fds.so:5000'

        MountFlags=slave

        LimitNOFILE=1048576

        LimitNPROC=1048576

        ExecStart=/usr/lib/coreos/dockerd --daemon --host=fd:// $DOCKER_OPTS
        $DOCKER_OPT_BIP $DOCKER_OPT_MTU $DOCKER_OPT_IPMASQ



        [Install]

        WantedBy=multi-user.target
    - name: setup-network-environment.service
      command: start
      content: >
        [Unit]

        Description=Setup Network Environment

        Documentation=https://github.com/kelseyhightower/setup-network-environment

        Requires=network-online.target

        After=network-online.target



        [Service]

        ExecStartPre=-/usr/bin/mkdir -p /opt/bin

        ExecStartPre=/usr/bin/curl -L -o /opt/bin/setup-network-environment -z
        /opt/bin/setup-network-environment
        https://softrepo.blob.core.chinacloudapi.cn/platform/setup-network-environment

        ExecStartPre=/usr/bin/chmod +x /opt/bin/setup-network-environment

        ExecStart=/opt/bin/setup-network-environment

        RemainAfterExit=yes

        Type=oneshot
    - name: kube-proxy.service
      command: start
      content: "[Unit]\nDescription=Kubernetes Proxy\nDocumentation=https://github.com/GoogleCloudPlatform/kubernetes\nRequires=setup-network-environment.service kube-kubelet.service\nAfter=setup-network-environment.service kube-kubelet.service\n[Service]\nLimitNOFILE=1048576\nLimitNPROC=1048576\nExecStartPre=/usr/bin/curl -L -o /opt/bin/kube-proxy -z /opt/bin/kube-proxy https://softrepo.blob.core.chinacloudapi.cn/k8s1-1-1/kube-proxy\nExecStartPre=/usr/bin/chmod +x /opt/bin/kube-proxy\n# wait for kubernetes master to be up and ready\nExecStartPre=/opt/bin/wupiao 172.18.0.4 6443\nExecStart=/opt/bin/kube-proxy \\\n--master=https://172.18.0.4:6443 \\\n--kubeconfig=/opt/bin/worker-kubeconfig.yaml \\\n--logtostderr=true\nRestart=always\nRestartSec=10\n"
    - name: kube-kubelet.service
      command: start
      content: "[Unit]\nDescription=Kubernetes Kubelet\nDocumentation=https://github.com/GoogleCloudPlatform/kubernetes\nRequires=setup-network-environment.service\nAfter=setup-network-environment.service\n\n[Service]\nLimitNOFILE=1048576\nLimitNPROC=1048576\nEnvironmentFile=/etc/network-environment\nExecStartPre=-/usr/bin/mkdir -p /opt/bin\nExecStartPre=/usr/bin/curl -L -o /opt/bin/ca.pem -z /opt/bin/ca.pem https://deepshare2.blob.core.chinacloudapi.cn/keys/ca.pem\nExecStartPre=/usr/bin/curl -L -o /opt/bin/worker-key.pem -z /opt/bin/worker-key.pem https://deepshare2.blob.core.chinacloudapi.cn/keys/worker-key.pem\nExecStartPre=/usr/bin/curl -L -o /opt/bin/worker.pem -z /opt/bin/worker.pem https://deepshare2.blob.core.chinacloudapi.cn/keys/worker.pem\nExecStartPre=/usr/bin/curl -L -o /opt/bin/worker-kubeconfig.yaml -z /opt/bin/worker-kubeconfig.yaml https://deepshare2.blob.core.chinacloudapi.cn/keys/worker-kubeconfig.yaml\nExecStartPre=/usr/bin/curl -L -o /opt/bin/kubelet -z /opt/bin/kubelet https://softrepo.blob.core.chinacloudapi.cn/k8s1-1-1/kubelet\nExecStartPre=/usr/bin/chmod +x /opt/bin/kubelet\n# wait for kubernetes master to be up and ready\nExecStartPre=/opt/bin/wupiao 172.18.0.4 6443\nExecStart=/opt/bin/kubelet \\\n--address=0.0.0.0 \\\n--port=10250 \\\n--api-servers=https://172.18.0.4:6443,https://172.18.0.5:6443,https://172.18.0.6:6443,https://172.18.0.7:6443,https://172.18.0.8:6443 \\\n--kubeconfig=/opt/bin/worker-kubeconfig.yaml \\\n--allow-privileged=true \\\n--logtostderr=true \\\n--cadvisor-port=4194 \\\n--healthz-bind-address=0.0.0.0 \\\n--config=/etc/kubernetes/manifests/ \\\n--pod-infra-container-image=r.fds.so:5000/pause:0.8.0 \\\n--cluster_dns=10.100.0.53 \\\n--cluster_domain=kube.local \\\n--healthz-port=10248\nRestart=always\nRestartSec=10\n"
  update:
    group: stable
    reboot-strategy: 'off'
